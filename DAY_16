Anagram
Given two strings s1 and s2 consisting of lowercase characters. The task is to check whether two given strings are an anagram of each other or not. An anagram of a string is another string that contains the same characters, only the order of characters can be different. For example, "act" and "tac" are an anagram of each other. Strings s1 and s2 can only contain lowercase alphabets.

Note: You can assume both the strings s1 & s2 are non-empty.

Examples :

Input: s1 = "geeks", s2 = "kseeg"
Output: true
Explanation: Both the string have same characters with same frequency. So, they are anagrams.

Answer :

class Solution {
    // Function to check whether two strings are anagrams of each other or not.
    public static boolean areAnagrams(String s1, String s2) {
        // If lengths are not equal, they cannot be anagrams
        if (s1.length() != s2.length()) {
            return false;
        }

        // Array to keep count of characters
        int[] charCount = new int[26];

        // Increment count for characters in s1
        for (char ch : s1.toCharArray()) {
            charCount[ch - 'a']++;
        }

        // Decrement count for characters in s2
        for (char ch : s2.toCharArray()) {
            charCount[ch - 'a']--;
        }

        // Check if all counts are zero
        for (int count : charCount) {
            if (count != 0) {
                return false;
            }
        }

        return true;
    }

    // Main method for testing
    public static void main(String[] args) {
        String s1 = "geeks";
        String s2 = "kseeg";

        if (areAnagrams(s1, s2)) {
            System.out.println("true");
        } else {
            System.out.println("false");
        }
    }
}
